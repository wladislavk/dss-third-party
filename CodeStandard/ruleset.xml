<?xml version="1.0"?>
<ruleset name="CodeStandard">

    <!--
       The name attribute of the ruleset tag is displayed
       when running PHP_CodeSniffer with the -v command line
       argument. The description tag below is not displayed anywhere
       except in this file, so it can contain information for
       developers who may change this file in the future.
    -->
    <description>A custom coding standard</description>

    <!--
       You can hard-code ignore patterns directly into your
       custom standard so you don't have to specify the
       patterns on the command line.
    -->
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*/data/*</exclude-pattern>

    <!-- Include the default PSR2 standard -->
    <rule ref="PSR2">
        <!-- Exclude forcing opening braces on same line -->
        <exclude name="Squiz.ControlStructures.ControlSignature"/>

        <!-- Exclude requirement to have namespace in every file -->
        <exclude name="PSR1.Classes.ClassDeclaration.MissingNamespace"/>

        <!--
            Exclude requirement to space after opening brace in
            control structure because we use spaces around bang
            and we have a custom sniff for that
	    -->
        <exclude name="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace"/>
	    <exclude name="PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace"/>
    </rule>

    <!-- Override some of the PSR2 standards -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
        <severity>5</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
        <severity>5</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
        <severity>5</severity>
    </rule>

    <!-- Class variable must contain comments -->
    <rule ref="Squiz.Commenting.VariableComment.Missing"/>

    <!-- New line before multiline functions -->
    <rule ref="Squiz.Functions">
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.NewlineBeforeOpenBrace"/>
    </rule>

    <!-- Opening brace on multiline functions can be new line -->
    <rule ref="Squiz.Functions">
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnNewLine"/>
    </rule>

    <!-- Unused function parameters not allowed -->
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>

    <!-- Opening braces Allman style -->
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>

    <!-- Deprecated PHP functions -->
    <rule ref="Generic.PHP.DeprecatedFunctions"/>

    <!-- Prevent PHP short open tags -->
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>

    <!-- Class constants must be upper case -->
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

    <!-- Whitespace -->
    <rule ref="Squiz.WhiteSpace">
        <exclude name="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose"/>
        <exclude name="Squiz.WhiteSpace.FunctionSpacing.After"/>
        <exclude name="Squiz.WhiteSpace.FunctionSpacing.Before"/>
        <exclude name="Squiz.WhiteSpace.OperatorSpacing.SpacingBefore"/>
        <exclude name="Squiz.Commenting.VariableComment.ShortFullStop"/>
        <exclude name="Squiz.WhiteSpace.ObjectOperatorSpacing.Before"/>
    </rule>

    <!-- Doc blocks -->
    <rule ref="Squiz.Commenting.FunctionComment">
        <exclude name="Squiz.Commenting.FunctionComment.ShortFullStop"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamComment"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParameterNamesNotAligned"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParameterCommentsNotAligned"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentNotCapital"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParams"/>
    </rule>

</ruleset>

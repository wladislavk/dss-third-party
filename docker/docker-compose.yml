version: "2.1"

# WINDOWS: Windows REQUIRES explicit path for volumes, Linux/Mac can use relative (default).
  # Windows example cmd for startup: 
  # ROOT_PATH='c:/Users/MyName/Documents/Github/DS3' docker-compose up -d

services:
  db:
    build: 
      context: ../legacy
      dockerfile: Dockerfile.mysql
      args:
        SYSTEM_TZ: "${SYSTEM_TZ:-America/New_York}"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      TZ: "${SYSTEM_TZ:-America/New_York}"
    labels:
      - "traefik.enable=false"
    ports:
      - "${MYSQL_PORT:-3306}:3306"

  baseimage:
    build:
      context: .
      args:
        SYSTEM_TZ: "${SYSTEM_TZ:-America/New_York}"
    image: 484964515519.dkr.ecr.us-east-1.amazonaws.com/baseimage
    environment:
      SYSTEM_TZ_ENV: "${SYSTEM_TZ:-America/New_York}"
    command: bash -c 'yum list installed | grep -e php56 -e mcrypt -e pdf -e httpd24'
    labels:
      - "traefik.enable=false"

  loader:
    build:
      context: ..
      dockerfile: legacy/Dockerfile
      args:
        LEGACY_DIR: legacy
        LOADER_DIR: loader
        SYSTEM_TZ: "${SYSTEM_TZ:-America/New_York}"
    image: 484964515519.dkr.ecr.us-east-1.amazonaws.com/loader
    env_file: ../loader/.env.example
    environment:
      APP_URL: "https://loader.docker.localhost/"
      API_URL: "https://api.docker.localhost/"
      LAN_API_URL: "http://api/"
      # we need a separate env variable because values might differ in production
      STRIPE_PROXY_URL: "http://api/"
      VUE_URL: "https://vue.docker.localhost/"
      DOCKER_USED: 1
      API_CONTAINER: "api"
      VUE_CONTAINER: "vue"
      LEGACY_PATH: /opt/rh/httpd24/root/var/www/html/legacy
      PHP_PATH: /opt/rh/rh-php56/root/bin/php
      DB_HOST: db
      DB_DATABASE: homestead
      DB_USERNAME: homestead
      DB_PASSWORD: secret
      DUAL_APP: "${DUAL_APP:-0}"
    volumes:
      - "${ROOT_PATH:-..}/legacy:/opt/rh/httpd24/root/var/www/html/legacy"
      - "${ROOT_PATH:-..}/loader:/opt/rh/httpd24/root/var/www/html/loader"
      - "${ROOT_PATH:-..}/docker/images:/opt/rh/httpd24/root/var/www/shared/q_file"
    labels:
      - "traefik.port=80"
      - "traefik.backend=loader"
      - "traefik.frontend.rule=HostRegexp:{host:loader.docker.localhost}"

  api:
    build:
      context: ../api
      dockerfile: Dockerfile
      args:
        SYSTEM_TZ: "${SYSTEM_TZ:-America/New_York}"
    env_file: ../api/.env.example
    environment:
      DB_HOST: db
      DB_DATABASE: homestead
      DB_USERNAME: homestead
      DB_PASSWORD: secret
    volumes:
      - "${ROOT_PATH:-..}/api:/var/www/html"
    labels:
      - "traefik.port=80"
      - "traefik.backend=api"
      - "traefik.frontend.rule=HostRegexp:{host:api.docker.localhost}"

  vue:
    build: ../vue
    image: 484964515519.dkr.ecr.us-east-1.amazonaws.com/vue
    environment:
      NODE_ENV: development
      # NODE_ENV: production
      API_ROOT: '"https://api.docker.localhost/"'
      API_PATH: '"https://api.docker.localhost/api/v1/"'
      LEGACY_ROOT: '"https://loader.docker.localhost/"'
      FILE_STORAGE: '"${FILE_STORAGE:-legacy}"'
      BUCKET_URL: '"${BUCKET_URL}"'
      PORT: 80
    volumes:
      - "${ROOT_PATH:-..}/vue:/opt/app"
    labels:
      - "traefik.port=80"
      - "traefik.backend=vue"
      - "traefik.frontend.rule=HostRegexp:{host:vue.docker.localhost}"
 
  acceptance:
    build:
      context: ../acceptance
      dockerfile: Dockerfile
      args:
        SYSTEM_TZ: "${SYSTEM_TZ:-America/New_York}"
    environment:
      NODE_ENV: development
      PORT: 80
      DB_HOST: db
      DB_DATABASE: homestead
      DB_USERNAME: homestead
      DB_PASSWORD: secret
      MEDIUM_WAIT_TIME: "${MEDIUM_WAIT_TIME:-2000}"
      SHORT_WAIT_TIME: "${SHORT_WAIT_TIME:-500}"
      VERY_SHORT_WAIT_TIME: "${VERY_SHORT_WAIT_TIME:-200}"
      START_URL: "http://loader/manage"
      API_URL: "https://api.docker.localhost/api/v1"
    command: tail -f /dev/null
    volumes:
      - "${ROOT_PATH:-..}/acceptance:/opt/app/acceptance"
    labels:
      - "traefik.port=80"
      - "traefik.backend=acceptance"
      - "traefik.frontend.rule=HostRegexp:{host:acceptance.docker.localhost}"
    links:
      - selenium

  balancer:
    image: traefik:v1.2.3-alpine
    command: --docker --docker.domain=docker.localhost --logLevel=DEBUG
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
      # NOTE: On Windows10, Skype CONFLICTS with 443 port.
      # Either change to other port (e.g. 4433:443), or kill Skype before starting container.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/etc/traefik/traefik.toml
      - ./ssl/:/etc/ssl/
    labels:
      - "traefik.enable=false"

  # Available at localhost:8080 with UN/PW from DB container above
  # Consider removing this after final deploy pipeline is setup
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    links:
      - db

  selenium:
    image: "selenium/standalone-chrome:2.53.1"
    # shm_size: 1g
    environment:
      TZ: "${SYSTEM_TZ:-America/New_York}"
    volumes:
      - "/dev/shm:/dev/shm"
    ports:
      - "${SELENIUM_PORT:-4444}:4444"

  static:
    image: "httpd:2.4"
    ports:
      - "${STATIC_PORT:-8084}:80"
    volumes:
      - "./images:/usr/local/apache2/htdocs"
    labels:
      - "traefik.port=80"
      - "traefik.backend=static"
      - "traefik.frontend.rule=HostRegexp:{host:static.docker.localhost}"

<?php
//This Function is Used to format Data to insert Data in DB
function s_for($str)
{
	return addslashes(trim(htmlentities($str)));
}

//This Function is Used to Strip Slashes
function st($str)
{
	return stripslashes(trim($str));
}

//This Function is used for Paging
function paging($no_pages,$index_val,$vid)
{
	for($p_count=0;$p_count<$no_pages;$p_count++)
	{
		if($index_val == $p_count)
		{
		?>
			<strong><?=$p_count+1;?></strong>
		<?
		}
		else
		{
			
		?>
			<a href="<?=$_SERVER['PHP_SELF']?>?page=<?=$p_count?>&<?=$vid?>" class="fp">
			<?=$p_count+1;?></a>
		<?
		}
	}
		
}

// Function to Get Contacts
// Returns comma delimited list of contactids
function get_mdcontactids ($pid) {
  $contact_sql = "SELECT docsleep, docpcp, docdentist, docent, docmdother FROM dental_patients where patientid = '".s_for($pid)."';";
  $contact_res = mysql_query($contact_sql);
  $contactids = array();
  $row = mysql_fetch_array($contact_res, MYSQL_NUM);
  foreach ($row as $field) {
    if ($field != "Not Set") {
      $contacts = explode(",", $field);
      foreach ($contacts as $contact) {
				if ($contact != "") {
	        $contactids[] = $contact;
				}
      }
    }
  }
  $contactid_list = implode(",", $contactids);

  return $contactid_list;
}

function get_mdreferralids ($pid) {
  $contact_sql = "SELECT dental_referredby.referredbyid FROM dental_referredby JOIN dental_patients ON  dental_patients.referred_by=dental_referredby.referredbyid WHERE dental_patients.patientid IN('".s_for($pid)."');";
  $contact_res = mysql_query($contact_sql);
  $contactids = array();
  while ($row = mysql_fetch_array($contact_res, MYSQL_NUM)) {
    $contactids[] = $row[0];
  }
  $contactid_list = implode(",", $contactids);

  return $contactid_list;

}

// Retrieve Names Salutation and more from Database
// Returns an array of the form [patient, mds, or md_referrals][id]['fieldname']
function get_contact_info ($patient, $md_list, $md_referral_list) {
  $contact_info = array();
  if (isset($patient)) {
    $sql = "SELECT patientid AS id, salutation, firstname, lastname, add1, add2, city, state, zip, preferredcontact FROM dental_patients WHERE patientid IN('".$patient."');";
    $result = mysql_query($sql);
    while ($row = mysql_fetch_assoc($result)) {
      $contact_info['patient'][] = $row;
    }
  }
  if (isset($md_list) && $md_list != "") {
    $sql = "SELECT dental_contact.contactid AS id, dental_contact.salutation, dental_contact.firstname, dental_contact.lastname, dental_contact.middlename, dental_contact.company, dental_contact.add1, dental_contact.add2, dental_contact.city, dental_contact.state, dental_contact.zip, dental_contact.preferredcontact, dental_contacttype.contacttype FROM dental_contact LEFT JOIN dental_contacttype ON dental_contact.contacttypeid=dental_contacttype.contacttypeid WHERE dental_contact.contactid IN(".$md_list.");";
    $result = mysql_query($sql);
    while ($row = mysql_fetch_assoc($result)) {
      $contact_info['mds'][] = $row;
    }
  }
  if (isset($md_referral_list) && $md_referral_list != "") {
    $sql = "SELECT dental_referredby.referredbyid AS id, dental_referredby.salutation, dental_referredby.lastname, dental_referredby.middlename, dental_referredby.firstname, dental_referredby.company, dental_referredby.add1, dental_referredby.add2, dental_referredby.city, dental_referredby.state, dental_referredby.zip, dental_referredby.preferredcontact, dental_contacttype.contacttype FROM dental_referredby LEFT JOIN dental_contacttype ON dental_referredby.contacttypeid=dental_contacttype.contacttypeid WHERE dental_referredby.referredbyid IN(".$md_referral_list.");";
    $result = mysql_query($sql);
    while ($row = mysql_fetch_assoc($result)) {
      $contact_info['md_referrals'][] = $row;
    }
  }

  return $contact_info;
}

// Function to Create Letters
function create_letter ($templateid, $pid = null, $stepid = null, $topatient = null, $md_list = null, $md_referral_list = null, $parentid = null, $template = null, $send_method = null, $status = null, $deleted = null) {
  $gen_date = date('Y-m-d H:i:s');
  if ($status == null) {
		$status = '0';
	}
  $delivered = '0';
  if ($deleted == null) {
    $deleted = '0';
  }
  $columns = "templateid";
  if (!isset($templateid)) {
    return "Error: Letter Template not specified";
  } else {
    $values = "'".mysql_real_escape_string($templateid)."'";
  }
  if (isset($pid)) {
    $columns .= ", patientid";
    $values .= ", '".mysql_real_escape_string($pid)."'";
  }
  if (isset($stepid)) {
    $columns .= ", stepid";
    $values .= ", '".mysql_real_escape_string($stepid)."'";
  }
  if (isset($parentid)) {
    $columns .= ", parentid";
    $values .= ", '".mysql_real_escape_string($parentid)."'";
  }
  if (isset($topatient)) {
    $columns .= ", topatient";
    $values .= ", '".mysql_real_escape_string($topatient)."'";
  }
  if (isset($md_list)) {
    $columns .= ", md_list";
    $values .= ", '".mysql_real_escape_string($md_list)."'";
  }
  if (isset($md_referral_list)) {
    $columns .= ", md_referral_list";
    $values .= ", '".mysql_real_escape_string($md_referral_list)."'";
  }
  if (isset($template)) {
    $columns .= ",template ";
    $values .= ", '".mysql_real_escape_string($template)."'";
  }
  if (isset($send_method)) {
    $columns .= ", send_method";
    $values .= ", '".mysql_real_escape_string($send_method)."'";
  }
  if (isset($status)) {
		$columns .= ", status";
		$values .= ", '".mysql_real_escape_string($status)."'";
	}
  if (isset($deleted)) {
		$columns .= ", deleted";
		$values .= ", '".mysql_real_escape_string($deleted)."'";
	}

  $columns .= ", generated_date, delivered, docid, userid";
  $values .= ", '$gen_date', '$delivered', '". $_SESSION['docid'] ."', '". $_SESSION['userid'] ."'";
  $letter_query = "INSERT INTO dental_letters ($columns) VALUES ($values);";
  $letter_insert = mysql_query($letter_query);
  if(!$letter_insert) {
    return ("MYSQL ERROR:".mysql_errno().": ".mysql_error()."<br/>"."Error inserting Letter to Database");
  } else {
    $id = mysql_insert_id();
    // If parent and recipient ids are set, clear the recipient id from the parent

    return $id;
  }
}

function send_letter($letterid, $parent = null, $type, $recipientid, $template = null) {
  if (!isset($letterid)) {
		return false;
  }
	// Find out preferred send_method
	switch ($type) {
		case "patient":
			$sql = "SELECT preferredcontact FROM dental_patients WHERE patientid = '".$recipientid."';";
			$result = mysql_query($sql);
			$preferred = mysql_result($result, 0);
			break;
		case "md":
			$sql = "SELECT preferredcontact FROM dental_contact WHERE contactid = '".$recipientid."';";
			$result = mysql_query($sql);
			$preferred = mysql_result($result, 0);

			break;
		case "md_referral":
			$sql = "SELECT preferredcontact FROM dental_referredby WHERE referredbyid = '".$recipientid."';";
			$result = mysql_query($sql);
			$preferred = mysql_result($result, 0);
			break;
	}
  if ($parent != null) { // If this is the last contact on the letter, set the status to sent and update the template if it has changed
		$letter_query = "UPDATE dental_letters SET status='1', send_method='".$preferred."', template='".$template."' WHERE letterid='".$letterid."';";
		$letter_result = mysql_query($letter_query);
  } else {
    $select_letter = "SELECT patientid, stepid, templateid, generated_date, send_method, topatient, md_list, md_referral_list FROM dental_letters WHERE letterid = '".$letterid."';";
		$select_result = mysql_query($select_letter);
		while ($row = mysql_fetch_assoc($select_result)) {
			$status = '1';
			if ($type == 'patient') {
				$topatient = '1';
				$removepatient = '0';
			} elseif ($type == 'md') {
				$md_list = $recipientid;
				$mds = explode(",", $row['md_list']);
				$key = array_search($recipientid, $mds);
				unset($mds[$key]);
				$new_mds = implode(",", $mds);
			} elseif ($type == 'md_referral') {
				$md_referral_list = $recipientid;
				$md_referrals = explode(",", $row['md_referral_list']);
				$key = array_search($recipientid, $md_referrals);
				unset($md_referrals[$key]);
				$new_md_referrals = implode(",", $mds);
			}
			if ($row['send_method'] == "") {
				$send_method = $preferred;
			} else {
				$send_method = $row['send_method'];
			}
		 	$letter = create_letter($row['templateid'], $row['patientid'], $row['stepid'], $topatient, $md_list, $md_referral_list, $letterid, $template, $send_method, $status); 	
		}
 		if (is_numeric($letter)) {	// new letter was created successfully Update the parent letter by removing the recipient
			if ($type == 'patient') {
				$update_letters = "UPDATE dental_letters SET topatient='".$removepatient."' WHERE letterid='".$letterid."';";
			} elseif ($type == 'md') {
				$update_letters = "UPDATE dental_letters SET md_list='".$new_mds."' WHERE letterid='".$letterid."';";
			} elseif ($type == 'md_referral') {
				$update_letters = "UPDATE dental_letters SET md_referral_list='".$new_md_referrals."' WHERE letterid='".$letterid."';";
			}
			$update_result = mysql_query($update_letters);
      if (!$update_result) {
				return false;
			} else {
				return $letter;
			}
		}
  }
}

// Actually Sends The Letter, returns send_method on success, false on failure.
function deliver_letter($letterid, $message) {
	if (!isset($letterid)) {
		return false;
	} else {
		$sql = "SELECT patientid, topatient, md_list, md_referral_list, send_method, docid FROM dental_letters where letterid = '".$letterid."';";
		$result = mysql_query($sql);
		while ($row = mysql_fetch_assoc($result)) {
			if ($row['topatient']) {
				$id = $row['patientid'];
				$sql = "SELECT firstname, lastname, email FROM dental_patients WHERE patientid = '".$id."';";
				$myinfo = mysql_query($sql);
				$firstname = mysql_result($myinfo, 0, 0);
				$lastname = mysql_result($myinfo, 0, 1);
				$to_email = mysql_result($myinfo, 0, 2);
			} elseif ($row['md_list']) {
				$id = $row['md_list'];
				$sql = "SELECT firstname, lastname, email FROM dental_contacts WHERE contactid = '".$id."';";
				$myinfo = mysql_query($sql);
				$firstname = mysql_result($myinfo, 0, 0);
				$lastname = mysql_result($myinfo, 0, 1);
				$to_email = mysql_result($myinfo, 0, 2);
			} elseif ($row['md_referral_list']) {
				$id = $row['md_referral_list'];
				$sql = "SELECT firstname, lastname, email FROM dental_referrals WHERE referralid = '".$id."';";
				$myinfo = mysql_query($sql);
				$firstname = mysql_result($myinfo, 0, 0);
				$lastname = mysql_result($myinfo, 0, 1);
				$to_email = mysql_result($myinfo, 0, 2);		
			}
			$send_method = $row['send_method'];
			$docid = $row['docid'];
		}
		// Email, Fax, Print Letter
		if ($send_method == 'email') {
			// Get Doctor's Name and Email
			$sql = "SELECT name, email FROM dental_users WHERE userid = '".$docid."';";
			$result = mysql_query($sql);
			$doc_name = mysql_result($result, 0, 0);
			$doc_email = mysql_result($result, 0, 1);
			$to_name = $firstname . " " . $lastname;
			$email_success = send_email($to_name, $to_email, $doc_name, $doc_email, "DSS No Subject", $message);
		}
		// Create PDF
		if ($email_success || $send_method == 'fax' || $send_method == 'paper') {
			$letter_query = "UPDATE dental_letters SET delivery_date = NOW(), delivered='1' WHERE letterid='".$letterid."';";
			$letter_result = mysql_query($letter_query);
		} elseif (!$email_success) {
			return "Email could not be sent";
		}
	}
}

function send_email($to_name, $to_email, $from_name, $from_email, $subject, $message) {
	$to = "$to_name <$to_email>";
	$from = "$from_name <$from_email>";

	$TextMessage = strip_tags($message,"<br>");
	$HTMLMessage = html_entity_decode($message);

	$boundary1 = rand(0,9) . "-"
		. rand(1000000000,9999999999) . "-"
		. rand(1000000000,9999999999) . "=:"
		. rand(10000,99999);
	$boundary2   =rand(0,9) . "-"
		. rand(1000000000,9999999999) . "-"
		. rand(1000000000,9999999999) . "=:"
		. rand(10000,99999);
	$boundary3   =rand(0,9) . "-"
		. rand(1000000000,9999999999) . "-"
		. rand(1000000000,9999999999) . "=:"
		. rand(10000,99999);

	// Attach an Image for embedded content
	$file_att = $_SERVER['DOCUMENT_ROOT'] . "/manage/admin/images/email/dss_header.jpg";
	$imgfiletype[] = "image/jpeg";
	$imgfilename[] = "dss_header.jpg";
	$cid[] = $imgfilename[0] . "@" . rand(10000,99999) . "." . rand(10000,99999);
	$imgsize[] = filesize($file_att);
	$handle = fopen($file_att, 'rb');
	$data = fread($handle, $imgsize[0]);
	$image[] = chunk_split(base64_encode($data));
	fclose($file);

	// Add an attachment
	$file_att = $_SERVER['DOCUMENT_ROOT'] . "/manage/admin/images/email/dss_footer.jpg";
	$filetype[] = "image/jpeg";
	$filename[] = "dss_footer.jpg";
	$handle = fopen($file_att, 'rb');
	$data = fread($handle, filesize($file_att));
	$attachment[] = chunk_split(base64_encode($data));
	fclose($file);

	$HTMLMessage = "<img src=\"cid:" . $cid[0] . "\" alt=\"Dental Sleep Solutions\">" . $HTMLMessage;

	$attachments = '';
	$headers =<<<AKAM
From: $from
Reply-To: $from_email
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="$boundary1"
AKAM;

	for ($i = 0; $i < count($image); $i++) {
		$images .=<<<IMG
--$boundary2
Content-Type: $imgfiletype[$i];
	name="$imgfilename[$i]"
Content-Transfer-Encoding: base64
Content-ID: <$cid[$i]>
Content-Description: $imgfilename[$i]
Content-Location: $imgfilename[$i]
Content-Disposition: inline; filename="$imgfilename[$i]"; size=$imgsize[$i];

$image[$i]

IMG;
	}

	for ($i = 0; $i < count($attachment); $i++) {
		$attachments .=<<<ATTA
--$boundary1
Content-Type: $filetype[$i];
	name="$filename[$i]"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
	filename="$filename[$i]"

$attachment[$i]

ATTA;
	}

	$body =<<<AKAM
This is a multi-part message in MIME format.

--$boundary1
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="$boundary2"

--$boundary2
Content-Type: multipart/alternative;
	boundary="$boundary3"

--$boundary3
Content-Type: text/plain;
	charset="US-ASCII"
Content-Transfer-Encoding: quoted-printable

$TextMessage
--$boundary3
Content-Type: text/html;
	charset="US-ASCII"
Content-Transfer-Encoding: quoted-printable

$HTMLMessage

--$boundary3--

$images
--$boundary2--

$attachments
--$boundary1--
AKAM;

	if (mail($to, $subject, $body, $headers)) {
		return true;
	} else {
		return false;
	}
}

/* Set $parent to true if you want to delete the original letter including all contacts
 * if $parent is false or not set, one contact will be removed from the letter and a new letter will be created
 * with the deleted flag set to true.
 * $type is either patient, md, or md_referral.  It refers to the type of contact who's letter is being deleted
 * $recipientid is the id of the contact to be removed from the original letter
 * $template is for a modified template (including tokens) if the original template has been edited.
 */
function delete_letter($letterid, $parent = null, $type, $recipientid, $template = null) {
  if (!isset($letterid)) {
		return false;
  } elseif ($parent == true) {
		$letter_query = "UPDATE dental_letters SET deleted='1' WHERE letterid='".$letterid."';";
		$letter_result = mysql_query($letter_query);
  } else {
    $select_letter = "SELECT patientid, stepid, templateid, generated_date, send_method, topatient, md_list, md_referral_list FROM dental_letters WHERE letterid = '".$letterid."';";
		$select_result = mysql_query($select_letter);
		while ($row = mysql_fetch_assoc($select_result)) {
			$deleted = '1';
			if ($type == 'patient') {
				$topatient = '1';
				$removepatient = '0';
			} elseif ($type == 'md') {
				$md_list = $recipientid;
				$mds = explode(",", $row['md_list']);
				$key = array_search($recipientid, $mds);
				unset($mds[$key]);
				$new_mds = implode(",", $mds);
			} elseif ($type == 'md_referral') {
				$md_referral_list = $recipientid;
				$md_referrals = explode(",", $row['md_referral_list']);
				$key = array_search($recipientid, $md_referrals);
				unset($md_referrals[$key]);
				$new_md_referrals = implode(",", $mds);
			}
		 	$letter = create_letter($row['templateid'], $row['patientid'], $row['stepid'], $topatient, $md_list, $md_referral_list, $letterid, $template, $row['send_method'], '', $deleted); 	
		}
 		if (is_numeric($letter)) {
			if ($type == 'patient') {
				$update_letters = "UPDATE dental_letters SET topatient='".$removepatient."' WHERE letterid='".$letterid."';";
			} elseif ($type == 'md') {
				$update_letters = "UPDATE dental_letters SET md_list='".$new_mds."' WHERE letterid='".$letterid."';";
			} elseif ($type == 'md_referral') {
				$update_letters = "UPDATE dental_letters SET md_referral_list='".$new_md_referrals."' WHERE letterid='".$letterid."';";
			}
			$update_result = mysql_query($update_letters);
      if (!$update_result) {
				return false;
			} else {
				return $letter;
			}
		}
  }
}

/**
 * Returns a mysql resultset resource for dental_users table on success,
 * false otherwise. Only franchisees are included (no staff).
 */
function get_franchisees() {
    $sql = "SELECT * FROM dental_users WHERE docid = 0 ORDER BY name ASC";
    return mysql_query($sql);
}

/**
 * Returns a mysql resultset resource for dental_patients table on success,
 * false otherwise.
 *
 * @param $franchisee_id Required. Limits the patients returned by
 *                       the franchisee id.
 */
function get_patients($franchisee_id = -1) {
    $sql = "SELECT * FROM dental_patients WHERE docid = $franchisee_id ORDER BY lastname ASC, firstname ASC";
    return mysql_query($sql);
}

/**
 * Returns the class 'arrow_asc' or 'arrow_desc' depending on the params
 * passed in to the function.  Returns false if $sort_by or $sort_compare_to
 * are null.
 *
 * @param $sort_by Required. The db table column being sorted.
 * @param $sort_compare_to Required. The html table column we are checking.
 * @param $sort_direction Optional (default 'asc'). Direction of the sort (desc|asc).
 */
function get_sort_arrow_class($sort_by, $sort_compare_to, $sort_direction = 'asc') {
    print "$sort_by:$sort_compare_to ";

    $arrow = '';
    
    if ($sort_by == $sort_compare_to) {
        $arrow .= 'arrow_' . strtolower($sort_direction);
    }
    
    return $arrow;
}

function get_sort_dir($sort_by, $sort_compare_to, $current_sort_dir = 'asc') {
    $direction = $current_sort_dir;
    
    if ($sort_by == $sort_compare_to) {
        $direction = (strtolower($current_sort_dir) == 'asc') ? 'desc' : 'asc';
    }
    
    return $direction;
}
?>
